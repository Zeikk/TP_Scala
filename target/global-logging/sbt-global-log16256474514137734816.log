[debug] > Exec(early(addDefaultCommands), None, None)
[debug] > Exec(addDefaultCommands, None, None)
[debug] > Exec(early(initialize), None, None)
[debug] > Exec(initialize, None, None)
[debug] > Exec(early(addPluginSbtFile="""C:\Users\loick\AppData\Local\Temp\idea.sbt"""), None, None)
[debug] > Exec(addPluginSbtFile="""C:\Users\loick\AppData\Local\Temp\idea.sbt""", None, None)
[debug] > Exec(boot, None, None)
[debug] > Exec(writeSbtVersion, None, None)
[debug] > Exec(reload, None, None)
[debug] > Exec(sbtStashOnFailure, None, None)
[debug] > Exec(onFailure loadFailed, None, None)
[debug] > Exec(loadp, None, None)
[info] welcome to sbt 1.5.8 (JetBrains s.r.o. Java 11.0.12)
[debug]       Load.loadUnit: plugins took 187.9297ms
[debug]       Load.loadUnit: defsScala took 0.6987ms
[debug] [Loading] Scanning directory C:\Users\loick\.sbt\1.0\plugins
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\loick\.sbt\1.0\plugins, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 32.6966 ms
[debug]           Load.resolveProject(global-plugins) took 81.41ms
[debug]         Load.loadTransitive: finalizeProject(Project(id global-plugins, base: C:\Users\loick\.sbt\1.0\plugins, plugins: List(<none>))) took 158.8446ms
[debug] [Loading] Done in C:\Users\loick\.sbt\1.0\plugins, returning: (global-plugins)
[debug]       Load.loadUnit: loadedProjectsRaw took 187.7988ms
[debug]       Load.loadUnit: cleanEvalClasses took 1.7866ms
[debug]     Load.loadUnit(file:/C:/Users/loick/.sbt/1.0/plugins/, ...) took 410.4614ms
[debug]   Load.apply: load took 684.3787ms
[debug]   Load.apply: resolveProjects took 9.1606ms
[debug]   Load.apply: finalTransforms took 135.5372ms
[debug]   Load.apply: config.delegates took 12.7196ms
[debug]   Load.apply: Def.make(settings)... took 741.0781ms
[debug]   Load.apply: structureIndex took 273.7644ms
[debug]   Load.apply: mkStreams took 2.8618ms
[info] loading global plugins from C:\Users\loick\.sbt\1.0\plugins
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug] Load.defaultLoad until apply took 5253.547ms
[debug]           Load.loadUnit: plugins took 53.7148ms
[debug]           Load.loadUnit: defsScala took 0.0064ms
[debug] [Loading] Scanning directory C:\Users\loick\OneDrive\Documents\projets\ENSICAEN\TP_Scala\TP_Scala\project
[debug]             Load.loadUnit: mkEval took 18.3674ms
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\loick\OneDrive\Documents\projets\ENSICAEN\TP_Scala\TP_Scala\project, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 4.1608 ms
[info] loading settings for project tp_scala-build from idea.sbt ...
[debug]               Load.resolveProject(tp_scala-build) took 4.5443ms
[debug]             Load.loadTransitive: finalizeProject(Project(id tp_scala-build, base: C:\Users\loick\OneDrive\Documents\projets\ENSICAEN\TP_Scala\TP_Scala\project, plugins: List(<none>))) took 9.8001ms
[debug] [Loading] Done in C:\Users\loick\OneDrive\Documents\projets\ENSICAEN\TP_Scala\TP_Scala\project, returning: (tp_scala-build)
[debug]           Load.loadUnit: loadedProjectsRaw took 4608.8009ms
[debug]           Load.loadUnit: cleanEvalClasses took 5.2278ms
[debug]         Load.loadUnit(file:/C:/Users/loick/OneDrive/Documents/projets/ENSICAEN/TP_Scala/TP_Scala/project/, ...) took 4669.555ms
[debug]       Load.apply: load took 4673.5405ms
[debug]       Load.apply: resolveProjects took 0.9579ms
[debug]       Load.apply: finalTransforms took 15.7135ms
[debug]       Load.apply: config.delegates took 0.4687ms
[debug]       Load.apply: Def.make(settings)... took 182.883ms
[debug]       Load.apply: structureIndex took 44.509ms
[debug]       Load.apply: mkStreams took 0.004ms
[info] loading project definition from C:\Users\loick\OneDrive\Documents\projets\ENSICAEN\TP_Scala\TP_Scala\project
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[warn] Unrecognized repository Scala Plugin Bundled Repository, ignoring it
[debug]     Load.loadUnit: plugins took 9973.8575ms
[debug]     Load.loadUnit: defsScala took 0.006ms
[debug] [Loading] Scanning directory C:\Users\loick\OneDrive\Documents\projets\ENSICAEN\TP_Scala\TP_Scala
[debug]       Load.loadUnit: mkEval took 0.4938ms
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\loick\OneDrive\Documents\projets\ENSICAEN\TP_Scala\TP_Scala, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.StructurePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.IdeaShellPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.StructurePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.IdeaShellPlugin)))
[debug] Clause(And(Set(Atom(sbt.plugins.CorePlugin), Atom(sbt.plugins.JvmPlugin))),Set(Atom(org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.SemanticdbPlugin,org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin,sbt.plugins.JUnitXmlReportPlugin,org.jetbrains.sbt.IdeaShellPlugin,org.jetbrains.sbt.StructurePlugin,sbt.plugins.MiniDependencyTreePlugin)
[debug] Plugins.deducer#function took 4.8478 ms
[info] loading settings for project tp_scala from build.sbt ...
[debug]         Load.resolveProject(tp_scala) took 72.64ms
[debug]       Load.loadTransitive: finalizeProject(Project(id tp_scala, base: C:\Users\loick\OneDrive\Documents\projets\ENSICAEN\TP_Scala\TP_Scala, plugins: List(<none>))) took 79.2871ms
[debug] [Loading] Done in C:\Users\loick\OneDrive\Documents\projets\ENSICAEN\TP_Scala\TP_Scala, returning: (tp_scala)
[debug]     Load.loadUnit: loadedProjectsRaw took 2592.7599ms
[debug]     Load.loadUnit: cleanEvalClasses took 43.6355ms
[debug]   Load.loadUnit(file:/C:/Users/loick/OneDrive/Documents/projets/ENSICAEN/TP_Scala/TP_Scala/, ...) took 12611.3392ms
[debug] Load.apply: load took 12616.4063ms
[debug] Load.apply: resolveProjects took 0.151ms
[debug] Load.apply: finalTransforms took 64.2344ms
[debug] Load.apply: config.delegates took 0.5703ms
[debug] Load.apply: Def.make(settings)... took 138.411ms
[debug] Load.apply: structureIndex took 42.3039ms
[debug] Load.apply: mkStreams took 0.0142ms
[info] set current project to TP_Scala (in build file:/C:/Users/loick/OneDrive/Documents/projets/ENSICAEN/TP_Scala/TP_Scala/)
[debug] > Exec(sbtPopOnFailure, None, None)
[debug] > Exec(resumeFromFailure, None, None)
[debug] > Exec(notifyUsersAboutShell, None, None)
[debug] > Exec(iflast shell, None, None)
[debug] > Exec(; set ideaPort in Global := 53583 ; idea-shell, None, None)
[debug] > Exec(set ideaPort in Global := 53583, None, None)
[info] Defining Global / ideaPort
[info] The new value will be used by Compile / compile, Test / compile
[debug] Defining 
[debug] 	Global / ideaPort
[debug] 
[debug] The new value will be used by 
[debug] 	Compile / compile
[debug] 	Test / compile
[info] Reapplying settings...
[info] set current project to TP_Scala (in build file:/C:/Users/loick/OneDrive/Documents/projets/ENSICAEN/TP_Scala/TP_Scala/)
[debug] > Exec(idea-shell, None, None)
